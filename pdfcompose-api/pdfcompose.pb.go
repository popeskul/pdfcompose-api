// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.4
// source: pdfcompose.proto

package pdfcompose_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadStatusCode int32

const (
	UploadStatusCode_OK    UploadStatusCode = 0
	UploadStatusCode_ERROR UploadStatusCode = 1
)

// Enum value maps for UploadStatusCode.
var (
	UploadStatusCode_name = map[int32]string{
		0: "OK",
		1: "ERROR",
	}
	UploadStatusCode_value = map[string]int32{
		"OK":    0,
		"ERROR": 1,
	}
)

func (x UploadStatusCode) Enum() *UploadStatusCode {
	p := new(UploadStatusCode)
	*p = x
	return p
}

func (x UploadStatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UploadStatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pdfcompose_proto_enumTypes[0].Descriptor()
}

func (UploadStatusCode) Type() protoreflect.EnumType {
	return &file_pdfcompose_proto_enumTypes[0]
}

func (x UploadStatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UploadStatusCode.Descriptor instead.
func (UploadStatusCode) EnumDescriptor() ([]byte, []int) {
	return file_pdfcompose_proto_rawDescGZIP(), []int{0}
}

type CreatePdfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*CreatePdfRequest_FileChunk
	//	*CreatePdfRequest_EndOfFile
	Data isCreatePdfRequest_Data `protobuf_oneof:"data"`
}

func (x *CreatePdfRequest) Reset() {
	*x = CreatePdfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pdfcompose_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePdfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePdfRequest) ProtoMessage() {}

func (x *CreatePdfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pdfcompose_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePdfRequest.ProtoReflect.Descriptor instead.
func (*CreatePdfRequest) Descriptor() ([]byte, []int) {
	return file_pdfcompose_proto_rawDescGZIP(), []int{0}
}

func (m *CreatePdfRequest) GetData() isCreatePdfRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *CreatePdfRequest) GetFileChunk() []byte {
	if x, ok := x.GetData().(*CreatePdfRequest_FileChunk); ok {
		return x.FileChunk
	}
	return nil
}

func (x *CreatePdfRequest) GetEndOfFile() bool {
	if x, ok := x.GetData().(*CreatePdfRequest_EndOfFile); ok {
		return x.EndOfFile
	}
	return false
}

type isCreatePdfRequest_Data interface {
	isCreatePdfRequest_Data()
}

type CreatePdfRequest_FileChunk struct {
	FileChunk []byte `protobuf:"bytes,1,opt,name=file_chunk,json=fileChunk,proto3,oneof"`
}

type CreatePdfRequest_EndOfFile struct {
	EndOfFile bool `protobuf:"varint,2,opt,name=end_of_file,json=endOfFile,proto3,oneof"`
}

func (*CreatePdfRequest_FileChunk) isCreatePdfRequest_Data() {}

func (*CreatePdfRequest_EndOfFile) isCreatePdfRequest_Data() {}

type CreatePdfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*CreatePdfResponse_PdfChunk
	//	*CreatePdfResponse_EndOfPdf
	Data isCreatePdfResponse_Data `protobuf_oneof:"data"`
}

func (x *CreatePdfResponse) Reset() {
	*x = CreatePdfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pdfcompose_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePdfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePdfResponse) ProtoMessage() {}

func (x *CreatePdfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pdfcompose_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePdfResponse.ProtoReflect.Descriptor instead.
func (*CreatePdfResponse) Descriptor() ([]byte, []int) {
	return file_pdfcompose_proto_rawDescGZIP(), []int{1}
}

func (m *CreatePdfResponse) GetData() isCreatePdfResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *CreatePdfResponse) GetPdfChunk() []byte {
	if x, ok := x.GetData().(*CreatePdfResponse_PdfChunk); ok {
		return x.PdfChunk
	}
	return nil
}

func (x *CreatePdfResponse) GetEndOfPdf() bool {
	if x, ok := x.GetData().(*CreatePdfResponse_EndOfPdf); ok {
		return x.EndOfPdf
	}
	return false
}

type isCreatePdfResponse_Data interface {
	isCreatePdfResponse_Data()
}

type CreatePdfResponse_PdfChunk struct {
	PdfChunk []byte `protobuf:"bytes,1,opt,name=pdf_chunk,json=pdfChunk,proto3,oneof"`
}

type CreatePdfResponse_EndOfPdf struct {
	EndOfPdf bool `protobuf:"varint,2,opt,name=end_of_pdf,json=endOfPdf,proto3,oneof"`
}

func (*CreatePdfResponse_PdfChunk) isCreatePdfResponse_Data() {}

func (*CreatePdfResponse_EndOfPdf) isCreatePdfResponse_Data() {}

var File_pdfcompose_proto protoreflect.FileDescriptor

var file_pdfcompose_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x64, 0x66, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x70, 0x64, 0x66, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x22, 0x5d,
	0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x64, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x66, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x4f,
	0x66, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5a, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x64, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x70, 0x64, 0x66, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x08, 0x70, 0x64, 0x66, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x66, 0x5f, 0x70, 0x64, 0x66, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x50, 0x64,
	0x66, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x25, 0x0a, 0x10, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a,
	0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01,
	0x32, 0x63, 0x0a, 0x11, 0x50, 0x64, 0x66, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x64, 0x66, 0x12, 0x1c, 0x2e, 0x70, 0x64, 0x66, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x64, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x70, 0x64, 0x66, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x64, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x20, 0x5a, 0x1e, 0x2f, 0x70, 0x64, 0x66, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x73, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x3b, 0x70, 0x64, 0x66, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pdfcompose_proto_rawDescOnce sync.Once
	file_pdfcompose_proto_rawDescData = file_pdfcompose_proto_rawDesc
)

func file_pdfcompose_proto_rawDescGZIP() []byte {
	file_pdfcompose_proto_rawDescOnce.Do(func() {
		file_pdfcompose_proto_rawDescData = protoimpl.X.CompressGZIP(file_pdfcompose_proto_rawDescData)
	})
	return file_pdfcompose_proto_rawDescData
}

var file_pdfcompose_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pdfcompose_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pdfcompose_proto_goTypes = []interface{}{
	(UploadStatusCode)(0),     // 0: pdfcompose.UploadStatusCode
	(*CreatePdfRequest)(nil),  // 1: pdfcompose.CreatePdfRequest
	(*CreatePdfResponse)(nil), // 2: pdfcompose.CreatePdfResponse
}
var file_pdfcompose_proto_depIdxs = []int32{
	1, // 0: pdfcompose.PdfComposeService.CreatePdf:input_type -> pdfcompose.CreatePdfRequest
	2, // 1: pdfcompose.PdfComposeService.CreatePdf:output_type -> pdfcompose.CreatePdfResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pdfcompose_proto_init() }
func file_pdfcompose_proto_init() {
	if File_pdfcompose_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pdfcompose_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePdfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pdfcompose_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePdfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pdfcompose_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*CreatePdfRequest_FileChunk)(nil),
		(*CreatePdfRequest_EndOfFile)(nil),
	}
	file_pdfcompose_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*CreatePdfResponse_PdfChunk)(nil),
		(*CreatePdfResponse_EndOfPdf)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pdfcompose_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pdfcompose_proto_goTypes,
		DependencyIndexes: file_pdfcompose_proto_depIdxs,
		EnumInfos:         file_pdfcompose_proto_enumTypes,
		MessageInfos:      file_pdfcompose_proto_msgTypes,
	}.Build()
	File_pdfcompose_proto = out.File
	file_pdfcompose_proto_rawDesc = nil
	file_pdfcompose_proto_goTypes = nil
	file_pdfcompose_proto_depIdxs = nil
}
